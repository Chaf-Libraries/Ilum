#version 450

layout(local_size_x = 32, local_size_y = 32) in;

layout(binding = 0) uniform sampler2D input_image;
layout(binding = 1, rgba16f) uniform image2D output_image;

layout(push_constant) uniform PushBlock{
    uvec2 extent;
    float threshold;
    uint enable;
}push_data;

vec3 preprocess(vec3 color)
{
    vec3 result;
    float l = dot(color.rgb, vec3(0.2126, 0.7152, 0.0722));
	result = (l > push_data.threshold) ? color.rgb : vec3(0.0);
    return result;
}

void main()
{
    if(push_data.enable == 0 || !all(lessThan(gl_GlobalInvocationID.xy, push_data.extent)))
    {
        return;
    }
    else
    {
        vec2 uv = vec2((gl_GlobalInvocationID.xy + 0.5) / vec2(push_data.extent));
        vec3 color = preprocess(texture(input_image, uv).rgb).rgb;
        imageStore(output_image, ivec2(gl_GlobalInvocationID.xy), vec4(color, 1.0));
    }
}